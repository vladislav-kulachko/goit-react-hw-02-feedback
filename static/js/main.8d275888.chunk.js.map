{"version":3,"sources":["components/Statistics.module.css","components/Buttons.module.css","components/Section.module.css","components/Buttons.jsx","components/Statistics.jsx","components/Section.jsx","components/Notification.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","FeedbackOptions","state","top","left","width","height","arrRefs","setRef","node","push","calcPosBlink","e","i","maxSize","Math","max","clientWidth","clientHeight","coords","getBoundingClientRect","clientX","round","clientY","setState","console","log","this","className","s","container","props","stateKeys","map","key","ref","type","button","onMouseDown","onClick","handleIncrement","blink","style","Component","Statistics","countTotalFeedback","good","neutral","bad","countPositiveFeedbackPercentage","Object","values","find","value","title","list","item","children","Section","section","Notify","message","App","stateKey","prevState","keys","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8d275888.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Statistics_title__183go\",\"list\":\"Statistics_list__JvDSN\",\"item\":\"Statistics_item__1MiHB\",\"value\":\"Statistics_value__2Pe0_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Buttons_container__1bNmS\",\"button\":\"Buttons_button__24d2g\",\"blink\":\"Buttons_blink__2pp6r\",\"puls\":\"Buttons_puls__2AW6z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__WM0Zh\",\"title\":\"Section_title__S0hNW\"};","import React, {Component} from 'react';\r\nimport s from './Buttons.module.css';\r\nclass FeedbackOptions extends Component {\r\n  state = {\r\n    top: '0px',\r\n    left: '0px',\r\n    width: '0px',\r\n    height: '0px',\r\n  };\r\n\r\n  arrRefs = [];\r\n\r\n  setRef = node => {\r\n    this.arrRefs.push(node);\r\n  };\r\n\r\n  calcPosBlink = (e, i) => {\r\n    let maxSize = Math.max(\r\n      this.arrRefs[i].clientWidth,\r\n      this.arrRefs[i].clientHeight,\r\n    );\r\n    let coords = this.arrRefs[i].getBoundingClientRect();\r\n    let left = e.clientX - Math.round(coords.left) - maxSize / 2 + 'px';\r\n    let top = e.clientY - Math.round(coords.top) - maxSize / 2 + 'px';\r\n    this.setState({\r\n      width: maxSize + 'px',\r\n      height: maxSize + 'px',\r\n      left: left,\r\n      top: top,\r\n    });\r\n\r\n    console.log(\r\n      left,\r\n      top,\r\n      maxSize,\r\n      coords.left,\r\n      coords.top,\r\n      e.clientY,\r\n      e.clientX,\r\n    );\r\n  };\r\n\r\n  render() {\r\n    let {top, left, width, height} = this.state;\r\n    return (\r\n      <div className={s.container}>\r\n        {this.props.stateKeys.map((key, i) => (\r\n          <button\r\n            ref={this.setRef}\r\n            key={key}\r\n            type=\"button\"\r\n            className={s.button}\r\n            onMouseDown={e => this.calcPosBlink(e, i)}\r\n            onClick={() => this.props.handleIncrement(key)}\r\n            // onMouseDown={() => this.setState({blinkClass: true})}\r\n            // onMouseUp={() => this.setState({blinkClass: false})}\r\n          >\r\n            {key}\r\n            <div\r\n              className={s.blink}\r\n              style={{top: top, left: left, width: width, height: height}}\r\n            ></div>\r\n          </button>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default FeedbackOptions;\r\n","import React, {Component} from 'react';\r\nimport s from './Statistics.module.css';\r\n\r\nclass Statistics extends Component {\r\n  countTotalFeedback = () => {\r\n    const {good, neutral, bad} = this.props.state;\r\n    const total = good + neutral + bad;\r\n    return total;\r\n  };\r\n  countPositiveFeedbackPercentage = () => {\r\n    const {good, neutral, bad} = this.props.state;\r\n    const posPercent = Math.round((good / (good + neutral + bad)) * 100);\r\n    return posPercent;\r\n  };\r\n\r\n  render() {\r\n    const {good, neutral, bad} = this.props.state;\r\n\r\n    return (\r\n      <>\r\n        {Object.values(this.props.state).find(value => value > 0) ? (\r\n          <div className={s.container}>\r\n            <h2 className={s.title}>Statistics</h2>\r\n            <ul className={s.list}>\r\n              <li className={s.item}>\r\n                Good: <span className={s.value}>{good}</span>\r\n              </li>\r\n              <li className={s.item}>\r\n                Neutral: <span className={s.value}>{neutral}</span>\r\n              </li>\r\n              <li className={s.item}>\r\n                Bad: <span className={s.value}>{bad}</span>\r\n              </li>\r\n              <li className={s.item}>\r\n                Total:{' '}\r\n                <span className={s.value}>{this.countTotalFeedback()}</span>\r\n              </li>\r\n              <li className={s.item}>\r\n                Positive feedback:{' '}\r\n                <span className={s.value}>\r\n                  {this.countPositiveFeedbackPercentage()}%\r\n                </span>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        ) : (\r\n          <>{this.props.children}</>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default Statistics;\r\n","import s from './Section.module.css';\r\n\r\nfunction Section({children}) {\r\n  return (\r\n    <section className={s.section}>\r\n      <h1 className={s.title}>Please, leave feedback!</h1>\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Section;\r\n","export default function Notify({message}) {\r\n  return <p>{message}</p>;\r\n}\r\n","import React, {Component} from 'react';\n\nimport './App.css';\nimport FeedbackOptions from './components/Buttons';\nimport Statistics from './components/Statistics';\nimport Section from './components/Section';\nimport Notify from './components/Notification';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n  handleIncrement = stateKey => {\n    this.setState(prevState => ({\n      [stateKey]: prevState[stateKey] + 1,\n    }));\n  };\n\n  render() {\n    return (\n      <Section>\n        <FeedbackOptions\n          stateKeys={Object.keys(this.state)}\n          handleIncrement={this.handleIncrement}\n        ></FeedbackOptions>\n        <Statistics state={this.state}>\n          <Notify message={'O my God, urgently click!'} />\n        </Statistics>\n      </Section>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}